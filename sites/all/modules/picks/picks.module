<?php

/**
 * @file
 * Some comment
 */

/**
 * Implements hook_help.
 *
 * Displays help and module information.
 *
 * @param path 
 *   Which path of the site we're using to display help
 * @param arg 
 *   Array that holds the current path as returned from arg() function
 */
function picks_help($path, $arg) {
  switch($path) {
    case "admin/help#picks":
      return '<p>' . t("Selects the pick for the current week") . '</p>';
    break;
  }
}

/**
 * Implemets hook_block_info()
 */ 
function picks_block_info() {
  $blocks['picks'] = array(
    //the name that will appear in the block list
    'info' => t('Selected Pick'),
    //default setting
    'cache' => DRUPAL_CACHE_PER_USER,
  );
  return $blocks;
}

/**
 * Custom content funciton
 *
 * Retrieve the user's pick for the current week from the database
 *
 * @return
 *    selected pick for the current week
 */
function picks_contents() {
  //check if the user is still alive
  //$alive = db_query("SELECT uid FROM {users} WHERE alive = 0")->fetchAllKeyed();

  global $user;

  /*$current_date = getdate();
  print_r($current_date);
  $temp = $current_date->month;
  echo($temp);*/

  $uid = $user->uid;
  $wid = picks_week_number();

  //not sure if I still need this?
  $previous_pick = $user->week_1_pick;

  //use database API to retrieve the selected pick
  $selected_pick = db_select('picks', 'p');
  $selected_pick->join('users', 'u', 'p.uid = u.uid');
  $query = $selected_pick
    ->fields('p', array('id', 'uid', 'wid', 'pick'))
    ->fields('u', array('name', 'wid', 'alive', 'week_1_pick', 'week_2_pick', 'week_3_pick', 'week_4_pick', 'week_5_pick', 'week_6_pick', 'week_7_pick', 'week_8_pick', 'week_9_pick', 'week_10_pick', 'week_11_pick', 'week_12_pick', 'week_13_pick', 'week_14_pick', 'week_15_pick', 'week_16_pick', 'week_17_pick'))
    ->condition('u.alive', 0) //still alive
    ->condition('p.wid', $wid) //current week
    ->condition('u.week_1_pick', 'u.week_7_pick', '!=')
    //->condition('u.week_2_pick', 'u.week_7_pick', '!=')
    //->condition('u.week_3_pick', 'u.week_7_pick', '!=')
    //->condition('u.week_4_pick', 'u.week_7_pick', '!=')
    //->condition('u.week_5_pick', 'u.week_7_pick', '!=')
    //->condition('u.week_6_pick', 'u.week_7_pick', '!=')
    ->execute();
  return $query;
}

/**
 * Custom content funciton
 *
 * Figure out which week we are on
 *
 * @return
 *    current week number
 */
function picks_week_number() {
  $week = 0;
  $current_date = time();

  /*if($current_date <= 1378792800) {
    $week = 1;
  }
  else if($current_date >= 1378782000 && $current_date <= 1379386799) {
  if($current_date <= 1379386799) {
    $week = 2;
  }
  else if($current_date >= 1379386800 && $current_date <= 1379991599) {
    $week = 3;
  }
  else if($current_date >= 1379991600 && $current_date <= 1380596399) { 
    $week = 4;
  }
  else if($current_date >= 1380596400 && $current_date <= 1381201199) { 
    $week = 5;
  }
  else if($current_date >= 1381201200 && $current_date <= 1381805999) {
    $week = 6;
  }
  else if($current_date >= 1381806000 && $current_date <= 1382410799) { */
  if($current_date <= 1382410799) {
    $week = 7;
  }
  else if($current_date >= 1382410800 && $current_date <= 1383015599) {
    $week = 8;
  }
  else if($current_date >= 1383015600 && $current_date <= 1383623999) {
    $week = 9;
  }
  else if($current_date >= 1383624000 && $current_date <= 1384228799) {
    $week = 10;
  }
  else if($current_date >= 1384228800 && $current_date <= 1384833599) {
    $week = 11;
  }
  else if($current_date >= 1384833600 && $current_date <= 1385438399) {
    $week = 12;
  }
  else if($current_date >= 1385438400 && $current_date <= 1386043199) {
    $week = 13;
  }
  else if($current_date >= 1386043200 && $current_date <= 1386647999) {
    $week = 14;
  }
  else if($current_date >= 1386648000 && $current_date <= 1387252799) {
    $week = 15;
  }
  else if($current_date >= 1387252800 && $current_date <= 1387857599) {
    $week = 16;
  }
  else {
    $week = 17;
  }

  return $week;
}


/**
 * Implements hook_block_view()
 *
 * Prepares the contents of the block
 */
function picks_block_view($delta = '') {
  //access check
  switch($delta) {
    case 'picks':
      $block['subject'] = t('Picks'); //subject = title of the block
      if(user_access('access content')) {
        //retrieve and process the data here

        //use our custom funciton to retrieve data
        $result = picks_contents();

        $get_week_number = picks_week_number();
        $week_number = 'week_' . $get_week_number . '_pick';
        
        //array to contain items for the block to render
        $items = array();

        $prev = array();

        //iterate over the result set and format as links
        foreach($result as $node) {
          
          //print_r($node);
          //print_r($prev);
          //print_r($week_number);

          if($node->uid != $prev->uid && $node->wid == $get_week_number) {
            $items[] = array(
              //'data' => l($node->name, 'node/' . $node->uid),
              //'data' =>'ID '. $node->id . ' ' . 'Week ' . $node->wid . ' : ' . $node->name . ' picked ' . $node->$week_number,
              'data' =>'Week ' . $node->wid . ' : ' . $node->name . ' picked ' . $node->$week_number,
              'uid' => $node->uid,
              'wid' => $node->wid,
              'name' => $node->name,
              'picked' => $node->$week_number,
            );
          }
          $prev = $node;
          /*$items[] = array(
            //'data' => l($node->name, 'node/' . $node->uid),
            'data' => 'Week ' . $node->wid . ' : ' . $node->name . ' picked ' . $node->$week_number,
            
            'uid' => $node->uid,
            'wid' => $node->wid,
            'name' => $node->name,
            'picked' => $node->$week_number,
          );*/

        }

        //no content
        if(empty($items)) {
          $block['content'] = t('No Survivals. GG');
        }
        else {
          //pass data through theme function?
          //show data as item list

          $block['content'] = theme('item_list', array(
            'items' => $items));
        }
      }
    return $block;
  }
}